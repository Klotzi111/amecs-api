plugins {
	id 'fabric-loom' version '0.10-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = "$mod_version+mc$minecraft_version".toString()
group = project.maven_group

loom {
	accessWidenerPath.set(file("src/main/resources/amecsapi.accesswidener"))
}

repositories {
	maven {
		name "Siphalor's Maven"
		url "https://maven.siphalor.de"
	}
	maven {
		url "https://jitpack.io"
	}
	mavenLocal()
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.minecraft_version}+build.${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation("de.siphalor:nmuk-${project.target_minecraft_major_version}:1.1+") {
		exclude module: "amecsapi-${project.target_minecraft_major_version}"
	}

	def fabric_deps = [
			"fabric-api-base"          : "0.4.0+65d505fc9c",
			"fabric-key-binding-api-v1": "1.0.5+65d505fc9c",
			"fabric-resource-loader-v0": "0.4.9+65d505fc9c"
	]
	for (dep in fabric_deps.entrySet()) {
		modApi "net.fabricmc.fabric-api:" + dep.getKey() + ":" + dep.getValue()
		include "net.fabricmc.fabric-api:" + dep.getKey() + ":" + dep.getValue()
	}
}

processResources {
	inputs.property "version", project.version

	afterEvaluate {
		from(sourceSets.main.resources.srcDirs) {
			include "fabric.mod.json"
			expand "version": version
			duplicatesStrategy DuplicatesStrategy.INCLUDE
		}
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
	
	doFirst {
		// We need to remove the mixin annotation processor because we are using names that the current mapping versions does no longer contain,
		// but we still want to generate the mixins for the older versions
		// With Mixin >= 0.8.5 there will be AP arguments that can downgrade message levels
		// So we remove the AP for Mixin < 0.8.5
		def removeFile = "sponge-mixin-0.10.6+mixin.0.8.4.jar"
		def closure = { File file -> { return !file.getName().endsWith(removeFile)} }
		def filtered = options.getAnnotationProcessorPath().filter(closure)
		options.annotationProcessorPath = filtered
		// println "AnnotationProcessorPath for $name is ${options.getAnnotationProcessorPath().getFiles()}"
	}
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	archiveClassifier.set("sources")
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = "${project.archives_base_name}-${project.target_minecraft_major_version}".toString()

			from components.java
		}
	}

	// select the repositories you want to publish to
	repositories {
		if (project.hasProperty("siphalorMavenPassword")) {
			maven {
				name = "Siphalor"
				url = "https://maven.siphalor.de/upload.php"
				credentials {
					username = siphalorMavenUser
					password = siphalorMavenPassword
				}
			}
		}
	}
}
